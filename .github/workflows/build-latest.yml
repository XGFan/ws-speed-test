name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    name: build-latest
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build Server
      run: |
        env GOOS=windows GOARCH=amd64 go build -o stServer-win.exe
        env GOOS=linux GOARCH=amd64 go build -o stServer-linux
        env GOOS=darwin GOARCH=amd64 go build -o stServer-mac
      working-directory: ./server
      
    - name: Build Client
      run: |
        env GOOS=windows GOARCH=amd64 go build -o stClient-win.exe
        env GOOS=linux GOARCH=amd64 go build -o stClient-linux
        env GOOS=darwin GOARCH=amd64 go build -o stClient-mac
      working-directory: ./client
      
    - name: zip file
      uses: montudor/action-zip@v0.1.0
      with:
        args: |
          zip -q output/stServer-win.zip server/stServer-win.exe -j
          zip -q output/stServer-mac.zip server/stServer-mac -j
          zip -q output/stServer-linux.zip server/stServer-linux -j
          zip -q output/stClient-win.zip client/stClient-win.exe -j
          zip -q output/stClient-mac.zip client/stClient-mac -j
          zip -q output/stClient-linux.zip client/stClient-linux -j
          
    - name: Add cfip.txt
      run: cp cfip.txt output/cfip.txt
  
    - name: upload artifact
      uses: kittaakos/upload-artifact-as-is@v1
      with:
        path: output/
